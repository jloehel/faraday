#!/bin/sh

set -o errexit
set -o pipefail

TIMEOUT=90
COUNT=0
RETRY=${RETRY:-1}
export POSTGRES_USER=${POSTGRES_USER:-postgres}
export POSTGRES_PORT=${POSTGRES_PORT:-5432}
export POSTGRES_DB=${POSTGRES_DB:-faraday}
export POSTGRES_USER=${POSTGRES_USER:-}
export POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-}

export SQLALCHEMY_DATABASE_URI="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

postgres_ready() {
python << END
import sys
import psycopg2
try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)
END
}
while [ $RETRY -ne 0 ]; do
  if [ "$COUNT" -ge "$TIMEOUT" ]; then
      printf " [FAIL]\n"
      echo "Timeout reached, exiting with error"
      exit 1
  fi
  postgres_ready && break || COUNT=$((COUNT+5))
  echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done

exec "$@"
